!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Attitude	FlightLog_pb2.py	/^Attitude = _reflection.GeneratedProtocolMessageType('Attitude', (_message.Message,), dict($/;"	kind:variable	line:614
Attribute	attribute.py	/^class Attribute(object):$/;"	kind:class	line:10
Auto	lidar_module.py	/^    def Auto(self):$/;"	kind:member	line:64
Auto	vehicle.py	/^    def Auto(self):$/;"	kind:member	line:275
Avoid	lidar_module.py	/^    def Avoid(self, target):$/;"	kind:member	line:81
Baro	Baro.py	/^class Baro(threading.Thread):$/;"	kind:class	line:11
Baro.py	Baro.py	1;"	kind:file	line:1
Barometre	FlightLog_pb2.py	/^Barometre = _reflection.GeneratedProtocolMessageType('Barometre', (_message.Message,), dict($/;"	kind:variable	line:642
Cancel	library.py	/^    Cancel = False$/;"	kind:variable	line:167
Cancel	vehicle.py	/^    def Cancel(self):$/;"	kind:member	line:302
CancelWatcher	library.py	/^class CancelWatcher(object):$/;"	kind:class	line:166
Channels	FlightLog_pb2.py	/^Channels = _reflection.GeneratedProtocolMessageType('Channels', (_message.Message,), dict($/;"	kind:variable	line:656
Compass	FlightLog_pb2.py	/^Compass = _reflection.GeneratedProtocolMessageType('Compass', (_message.Message,), dict($/;"	kind:variable	line:635
Compass	compass_module.py	/^class Compass(threading.Thread):$/;"	kind:class	line:11
Config	config.py	/^class Config(object):$/;"	kind:class	line:8
Coordinate	FlightLog_pb2.py	/^Coordinate = _reflection.GeneratedProtocolMessageType('Coordinate', (_message.Message,), dict($/;"	kind:variable	line:621
CutFrame	IMU.py	/^    def CutFrame(self, package, length=2):$/;"	kind:member	line:113
CutFrame	library.py	/^def CutFrame(package, length=2):$/;"	kind:function	line:44
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _ATTITUDE,$/;"	kind:variable	line:615
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _BAROMETRE,$/;"	kind:variable	line:643
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _CHANNELS,$/;"	kind:variable	line:657
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _COMPASS,$/;"	kind:variable	line:636
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _COORDINATE,$/;"	kind:variable	line:622
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _GPS,$/;"	kind:variable	line:629
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _LOCATION,$/;"	kind:variable	line:601
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _POINT,$/;"	kind:variable	line:608
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _SENSORS,$/;"	kind:variable	line:664
DESCRIPTOR	FlightLog_pb2.py	/^  DESCRIPTOR = _WAYPOINT,$/;"	kind:variable	line:650
DESCRIPTOR	FlightLog_pb2.py	/^DESCRIPTOR = _descriptor.FileDescriptor($/;"	kind:variable	line:18
Decision	lidar_module.py	/^    def Decision(self, targetDirection):$/;"	kind:member	line:40
Executor	cloud_module.py	/^class Executor(threading.Thread):$/;"	kind:class	line:52
FlightLog_pb2.py	FlightLog_pb2.py	1;"	kind:file	line:1
GCS	sbus_receiver.py	/^    def GCS(self):$/;"	kind:member	line:85
GPS	FlightLog_pb2.py	/^GPS = _reflection.GeneratedProtocolMessageType('GPS', (_message.Message,), dict($/;"	kind:variable	line:628
GPS	GPS_module.py	/^class GPS(threading.Thread):$/;"	kind:class	line:12
GPS_module.py	GPS_module.py	1;"	kind:file	line:1
Guided	lidar_module.py	/^    def Guided(self):$/;"	kind:member	line:50
Guided	vehicle.py	/^    def Guided(self):$/;"	kind:member	line:291
ID	waypoint.py	/^    def ID(self):$/;"	kind:member	line:19
IMU	IMU.py	/^class IMU(threading.Thread):$/;"	kind:class	line:9
IMU.py	IMU.py	1;"	kind:file	line:1
InitChannels	uORB.py	/^    def InitChannels(self):$/;"	kind:member	line:79
IsCancel	library.py	/^    def IsCancel(self):$/;"	kind:member	line:175
Lidar	lidar_module.py	/^class Lidar(object):$/;"	kind:class	line:15
Location	FlightLog_pb2.py	/^Location = _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), dict($/;"	kind:variable	line:600
MCU	MCU_module.py	/^class MCU(object):$/;"	kind:class	line:11
MCU_module.py	MCU_module.py	1;"	kind:file	line:1
MergeFrame	IMU.py	/^    def MergeFrame(self, package):$/;"	kind:member	line:118
ORB	Baro.py	/^    ORB = uORB()$/;"	kind:variable	line:185
ORB	GPS_module.py	/^    ORB = uORB()$/;"	kind:variable	line:66
ORB	IMU.py	/^    ORB = uORB()$/;"	kind:variable	line:136
ORB	compass_module.py	/^    ORB = uORB()$/;"	kind:variable	line:87
ORB	main.py	/^    ORB = uORB()$/;"	kind:variable	line:23
ORB	uORB.py	/^    ORB = uORB()$/;"	kind:variable	line:242
ORB	vehicle.py	/^    ORB = uORB()$/;"	kind:variable	line:313
ORB	waypoint.py	/^    ORB = uORB()$/;"	kind:variable	line:79
ParseFrag	IMU.py	/^    def ParseFrag(self, Frag):$/;"	kind:member	line:128
ParseIMU	IMU.py	/^    def ParseIMU(self, package):$/;"	kind:member	line:87
ParseQua	IMU.py	/^    def ParseQua(self, Qua):$/;"	kind:member	line:124
Phase	attribute.py	/^    def Phase(self):$/;"	kind:member	line:62
Point	FlightLog_pb2.py	/^Point = _reflection.GeneratedProtocolMessageType('Point', (_message.Message,), dict($/;"	kind:variable	line:607
RTL	lidar_module.py	/^    def RTL(self):$/;"	kind:member	line:109
RTL	vehicle.py	/^    def RTL(self):$/;"	kind:member	line:260
RawFrame	IMU.py	/^    def RawFrame(self):$/;"	kind:member	line:80
RawFrame	sbus_receiver.py	/^    def RawFrame(self):$/;"	kind:member	line:56
Receiver	cloud_module.py	/^class Receiver(threading.Thread):$/;"	kind:class	line:23
ReverseFrame	IMU.py	/^    def ReverseFrame(self, frame, length):$/;"	kind:member	line:121
Route	vehicle.py	/^    def Route(self, info):$/;"	kind:member	line:271
Route	waypoint.py	/^    def Route(self, info):$/;"	kind:member	line:38
SBUSReceiver	sbus_receiver.py	/^class SBUSReceiver:$/;"	kind:class	line:12
Singleton	library.py	/^class Singleton(type):$/;"	kind:class	line:184
THR2PIT	attribute.py	/^    def THR2PIT(self, THR):$/;"	kind:member	line:70
Vehicle	vehicle.py	/^class Vehicle(Attribute):$/;"	kind:class	line:12
Watcher	library.py	/^class Watcher(object):$/;"	kind:class	line:196
Waypoint	FlightLog_pb2.py	/^Waypoint = _reflection.GeneratedProtocolMessageType('Waypoint', (_message.Message,), dict($/;"	kind:variable	line:649
Waypoint	waypoint.py	/^class Waypoint(object):$/;"	kind:class	line:7
_ATTITUDE	FlightLog_pb2.py	/^_ATTITUDE = _descriptor.Descriptor($/;"	kind:variable	line:112
_BAROMETRE	FlightLog_pb2.py	/^_BAROMETRE = _descriptor.Descriptor($/;"	kind:variable	line:285
_CHANNELS	FlightLog_pb2.py	/^_CHANNELS = _descriptor.Descriptor($/;"	kind:variable	line:375
_COMPASS	FlightLog_pb2.py	/^_COMPASS = _descriptor.Descriptor($/;"	kind:variable	line:247
_COORDINATE	FlightLog_pb2.py	/^_COORDINATE = _descriptor.Descriptor($/;"	kind:variable	line:157
_GPS	FlightLog_pb2.py	/^_GPS = _descriptor.Descriptor($/;"	kind:variable	line:202
_LOCATION	FlightLog_pb2.py	/^_LOCATION = _descriptor.Descriptor($/;"	kind:variable	line:29
_POINT	FlightLog_pb2.py	/^_POINT = _descriptor.Descriptor($/;"	kind:variable	line:74
_SENSORS	FlightLog_pb2.py	/^_SENSORS = _descriptor.Descriptor($/;"	kind:variable	line:455
_WAYPOINT	FlightLog_pb2.py	/^_WAYPOINT = _descriptor.Descriptor($/;"	kind:variable	line:337
__call__	library.py	/^    def __call__(cls, *args, **kw):$/;"	kind:member	line:190
__del__	library.py	/^    def __del__(self):$/;"	kind:member	line:178
__init__	Baro.py	/^    def __init__(self, ORB, bus=1, i2c=0x77, elevation=0):$/;"	kind:member	line:14
__init__	GPS_module.py	/^    def __init__(self, ORB):$/;"	kind:member	line:15
__init__	IMU.py	/^    def __init__(self, ORB):$/;"	kind:member	line:12
__init__	MCU_module.py	/^    def __init__(self):$/;"	kind:member	line:14
__init__	attribute.py	/^    def __init__(self, mcu, ORB):$/;"	kind:member	line:12
__init__	cloud_module.py	/^    def __init__(self, work_queue, sock, vehicle=None):$/;"	kind:member	line:25
__init__	cloud_module.py	/^    def __init__(self, work_queue, vehicle=None, lidar=None):$/;"	kind:member	line:54
__init__	compass_module.py	/^    def __init__(self, ORB):$/;"	kind:member	line:14
__init__	config.py	/^    def __init__(self):$/;"	kind:member	line:11
__init__	library.py	/^    def __init__(cls, name, bases, dict):$/;"	kind:member	line:186
__init__	library.py	/^    def __init__(self):$/;"	kind:member	line:170
__init__	library.py	/^    def __init__(self):$/;"	kind:member	line:212
__init__	lidar_module.py	/^    def __init__(self, vehicle=None):$/;"	kind:member	line:19
__init__	sbus_receiver.py	/^    def __init__(self):$/;"	kind:member	line:14
__init__	uORB.py	/^    def __init__(self):$/;"	kind:member	line:17
__init__	vehicle.py	/^    def __init__(self, mcu=None, ORB=None):$/;"	kind:member	line:15
__init__	waypoint.py	/^    def __init__(self, ORB):$/;"	kind:member	line:9
__metaclass__	Baro.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:12
__metaclass__	GPS_module.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:13
__metaclass__	IMU.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:10
__metaclass__	MCU_module.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:12
__metaclass__	compass_module.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:12
__metaclass__	config.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:9
__metaclass__	lidar_module.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:17
__metaclass__	uORB.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:15
__metaclass__	vehicle.py	/^    __metaclass__ = Singleton$/;"	kind:variable	line:13
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:602
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:609
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:616
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:623
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:630
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:637
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:644
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:651
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:658
__module__	FlightLog_pb2.py	/^  __module__ = 'FlightLog_pb2'$/;"	kind:variable	line:665
__str__	config.py	/^    def __str__(self):$/;"	kind:member	line:132
__str__	uORB.py	/^    def __str__(self):$/;"	kind:member	line:235
_angle	library.py	/^def _angle(angle):$/;"	kind:function	line:104
_b	FlightLog_pb2.py	/^_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))$/;"	kind:variable	line:5
_calculte_mantissa	IMU.py	/^    def _calculte_mantissa(self, bin_number, exponent):$/;"	kind:member	line:55
_log	GPS_module.py	/^    def _log(self, msg):$/;"	kind:member	line:60
_log	MCU_module.py	/^    def _log(self, msg):$/;"	kind:member	line:61
_log	attribute.py	/^    def _log(self, msg):$/;"	kind:member	line:183
_log	cloud_module.py	/^    def _log(self, msg):$/;"	kind:member	line:48
_log	cloud_module.py	/^    def _log(self, msg):$/;"	kind:member	line:71
_log	compass_module.py	/^    def _log(self, msg):$/;"	kind:member	line:81
_log	lidar_module.py	/^    def _log(self, msg):$/;"	kind:member	line:134
_log	waypoint.py	/^    def _log(self, msg):$/;"	kind:member	line:74
_pipeSet	lidar_module.py	/^    _pipeSet = {}$/;"	kind:variable	line:16
_sym_db	FlightLog_pb2.py	/^_sym_db = _symbol_database.Default()$/;"	kind:variable	line:13
a	MCU_module.py	/^    a = [1000] * 8$/;"	kind:variable	line:67
add_number	waypoint.py	/^    def add_number(self):$/;"	kind:member	line:53
analysis_channels	vehicle.py	/^    def analysis_channels(self, channels):$/;"	kind:member	line:186
angle_heading_target	library.py	/^def angle_heading_target(origin, target, heading):$/;"	kind:function	line:98
args	main.py	/^                          args=(sock, ORB), seconds=1)$/;"	kind:variable	line:86
arm	vehicle.py	/^    def arm(self):$/;"	kind:member	line:44
ascii2hex	library.py	/^def ascii2hex(argv):$/;"	kind:function	line:135
attribute.py	attribute.py	1;"	kind:file	line:1
backward_brake	vehicle.py	/^    def backward_brake(self):$/;"	kind:member	line:148
baro	Baro.py	/^    baro = Baro(ORB)$/;"	kind:variable	line:186
baro	main.py	/^        baro = Baro(ORB)$/;"	kind:variable	line:48
brake	vehicle.py	/^    def brake(self):$/;"	kind:member	line:125
build_log	uORB.py	/^    def build_log(self):$/;"	kind:member	line:230
ch	config.py	/^    def ch(self, index):$/;"	kind:member	line:55
channel	uORB.py	/^    def channel(self, channel):$/;"	kind:member	line:65
checksum	compass_module.py	/^    def checksum(self, package):$/;"	kind:member	line:67
child	waypoint.py	/^    def child(self, point, index):$/;"	kind:member	line:58
clear	waypoint.py	/^    def clear(self):$/;"	kind:member	line:61
close	GPS_module.py	/^    def close(self):$/;"	kind:member	line:56
close	MCU_module.py	/^    def close(self):$/;"	kind:member	line:57
close	compass_module.py	/^    def close(self):$/;"	kind:member	line:77
close	uORB.py	/^    def close(self, *module):$/;"	kind:member	line:75
cloud_module.py	cloud_module.py	1;"	kind:file	line:1
code_pwm	MCU_module.py	/^    def code_pwm(self, channels):$/;"	kind:member	line:21
compass	compass_module.py	/^    compass = Compass(ORB)$/;"	kind:variable	line:88
compass	main.py	/^        compass = Compass(ORB)$/;"	kind:variable	line:32
compass_info	compass_module.py	/^    def compass_info(self, command, ack, size=8):$/;"	kind:member	line:48
compass_module.py	compass_module.py	1;"	kind:file	line:1
condition_yaw	vehicle.py	/^    def condition_yaw(self, heading=0, relative=True):$/;"	kind:member	line:196
config	config.py	/^config = Config()$/;"	kind:variable	line:136
config.py	config.py	1;"	kind:file	line:1
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:117
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:162
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:207
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:252
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:290
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:34
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:342
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:380
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:460
containing_type	FlightLog_pb2.py	/^  containing_type=None,$/;"	kind:variable	line:79
control_FRU	vehicle.py	/^    def control_FRU(self, AIL=0, ELE=0, THR=0, RUD=0):$/;"	kind:member	line:32
control_stick	vehicle.py	/^    def control_stick(self, AIL=0, ELE=0, THR=0, RUD=0):$/;"	kind:member	line:20
convert2Alt	Baro.py	/^def convert2Alt(hpa):$/;"	kind:function	line:176
convert2In	Baro.py	/^    def convert2In(self, pressure):$/;"	kind:member	line:172
convert_complement	IMU.py	/^    def convert_complement(self, hex_val):$/;"	kind:member	line:74
convert_ieee754	IMU.py	/^    def convert_ieee754(self, hex_val):$/;"	kind:member	line:65
cos	library.py	/^def cos(angle):$/;"	kind:function	line:156
count	library.py	/^    count = 0$/;"	kind:variable	line:168
dataflash	uORB.py	/^    def dataflash(self):$/;"	kind:member	line:189
dec2hex	library.py	/^def dec2hex(int_10):$/;"	kind:function	line:148
decode_BCD	compass_module.py	/^    def decode_BCD(self, package):$/;"	kind:member	line:70
decode_frame	sbus_receiver.py	/^    def decode_frame(self):$/;"	kind:member	line:123
disarm	vehicle.py	/^    def disarm(self):$/;"	kind:member	line:49
distance_from_home	uORB.py	/^    def distance_from_home(self):$/;"	kind:member	line:94
distance_to_target	uORB.py	/^    def distance_to_target(self):$/;"	kind:member	line:85
down_brake	vehicle.py	/^    def down_brake(self):$/;"	kind:member	line:172
download	attribute.py	/^    def download(self, index=0):$/;"	kind:member	line:55
download	waypoint.py	/^    def download(self, origin, index=0):$/;"	kind:member	line:22
element	library.py	/^def element(file_name):$/;"	kind:function	line:24
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:144
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:189
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:234
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:272
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:324
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:362
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:442
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:564
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:61
enum_types	FlightLog_pb2.py	/^  enum_types=[$/;"	kind:variable	line:99
executor	main.py	/^        executor = Executor(work_queue, vehicle)$/;"	kind:variable	line:81
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:104
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:149
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:194
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:239
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:277
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:329
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:367
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:447
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:569
extension_ranges	FlightLog_pb2.py	/^  extension_ranges=[],$/;"	kind:variable	line:66
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:141
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:186
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:231
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:269
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:321
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:359
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:439
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:561
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:58
extensions	FlightLog_pb2.py	/^  extensions=[$/;"	kind:variable	line:96
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:118
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:163
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:208
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:253
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:291
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:343
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:35
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:381
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:461
fields	FlightLog_pb2.py	/^  fields=[$/;"	kind:variable	line:80
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:116
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:161
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:206
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:251
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:289
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:33
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:341
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:379
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:459
file	FlightLog_pb2.py	/^  file=DESCRIPTOR,$/;"	kind:variable	line:78
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:115
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:160
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:205
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:250
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:288
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:32
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:340
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:378
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:458
filename	FlightLog_pb2.py	/^  filename=None,$/;"	kind:variable	line:77
forward	vehicle.py	/^    def forward(self):$/;"	kind:member	line:121
forward_brake	vehicle.py	/^    def forward_brake(self):$/;"	kind:member	line:142
full_name	FlightLog_pb2.py	/^  full_name='buffers.Attitude',$/;"	kind:variable	line:114
full_name	FlightLog_pb2.py	/^  full_name='buffers.Barometre',$/;"	kind:variable	line:287
full_name	FlightLog_pb2.py	/^  full_name='buffers.Channels',$/;"	kind:variable	line:377
full_name	FlightLog_pb2.py	/^  full_name='buffers.Compass',$/;"	kind:variable	line:249
full_name	FlightLog_pb2.py	/^  full_name='buffers.Coordinate',$/;"	kind:variable	line:159
full_name	FlightLog_pb2.py	/^  full_name='buffers.GPS',$/;"	kind:variable	line:204
full_name	FlightLog_pb2.py	/^  full_name='buffers.Location',$/;"	kind:variable	line:31
full_name	FlightLog_pb2.py	/^  full_name='buffers.Point',$/;"	kind:variable	line:76
full_name	FlightLog_pb2.py	/^  full_name='buffers.Waypoint',$/;"	kind:variable	line:339
full_name	FlightLog_pb2.py	/^  full_name='buffers.sensors',$/;"	kind:variable	line:457
getBus	Baro.py	/^    def getBus(self):$/;"	kind:member	line:161
getPressure	Baro.py	/^    def getPressure(self):$/;"	kind:member	line:155
getPressureAdj	Baro.py	/^    def getPressureAdj(self):$/;"	kind:member	line:158
getTempC	Baro.py	/^    def getTempC(self):$/;"	kind:member	line:149
getTempF	Baro.py	/^    def getTempF(self):$/;"	kind:member	line:152
get_AIL	config.py	/^    def get_AIL(self):$/;"	kind:member	line:81
get_BD	config.py	/^    def get_BD(self):$/;"	kind:member	line:120
get_Baro	config.py	/^    def get_Baro(self):$/;"	kind:member	line:108
get_DD	config.py	/^    def get_DD(self):$/;"	kind:member	line:123
get_ELE	config.py	/^    def get_ELE(self):$/;"	kind:member	line:84
get_GPS	config.py	/^    def get_GPS(self):$/;"	kind:member	line:102
get_IMU	config.py	/^    def get_IMU(self):$/;"	kind:member	line:129
get_MCU	config.py	/^    def get_MCU(self):$/;"	kind:member	line:99
get_MD	config.py	/^    def get_MD(self):$/;"	kind:member	line:117
get_PIT	config.py	/^    def get_PIT(self):$/;"	kind:member	line:96
get_RUD	config.py	/^    def get_RUD(self):$/;"	kind:member	line:90
get_THR	config.py	/^    def get_THR(self):$/;"	kind:member	line:87
get_alt	attribute.py	/^    def get_alt(self, relative=True):$/;"	kind:member	line:168
get_altitude	uORB.py	/^    def get_altitude(self, relative=True):$/;"	kind:member	line:111
get_attitude	attribute.py	/^    def get_attitude(self):$/;"	kind:member	line:147
get_attitude	compass_module.py	/^    def get_attitude(self):$/;"	kind:member	line:37
get_bearing	library.py	/^def get_bearing(aLocation1, aLocation2):$/;"	kind:function	line:50
get_cloud	config.py	/^    def get_cloud(self):$/;"	kind:member	line:78
get_compass	config.py	/^    def get_compass(self):$/;"	kind:member	line:105
get_degree	config.py	/^    def get_degree(self):$/;"	kind:member	line:126
get_distance_metres	library.py	/^def get_distance_metres(aLocation1, aLocation2):$/;"	kind:function	line:89
get_failsafe_status	sbus_receiver.py	/^    def get_failsafe_status(self):$/;"	kind:member	line:103
get_frame	MCU_module.py	/^    def get_frame(self, size=38):$/;"	kind:member	line:35
get_gear	config.py	/^    def get_gear(self):$/;"	kind:member	line:114
get_heading	attribute.py	/^    def get_heading(self):$/;"	kind:member	line:138
get_home	attribute.py	/^    def get_home(self):$/;"	kind:member	line:156
get_lidar	config.py	/^    def get_lidar(self):$/;"	kind:member	line:111
get_location	GPS_module.py	/^    def get_location(self, loc):$/;"	kind:member	line:50
get_location	attribute.py	/^    def get_location(self):$/;"	kind:member	line:159
get_location_metres	library.py	/^def get_location_metres(original_location, dNorth, dEast):$/;"	kind:function	line:65
get_mode	config.py	/^    def get_mode(self):$/;"	kind:member	line:93
get_node	config.py	/^    def get_node(self, param1, param2):$/;"	kind:member	line:71
get_num_stars	GPS_module.py	/^    def get_num_stars(self, loc):$/;"	kind:member	line:53
get_pitch	attribute.py	/^    def get_pitch(self):$/;"	kind:member	line:120
get_roll	attribute.py	/^    def get_roll(self):$/;"	kind:member	line:129
get_rx_channel	sbus_receiver.py	/^    def get_rx_channel(self, num_ch):$/;"	kind:member	line:95
get_rx_channels	sbus_receiver.py	/^    def get_rx_channels(self):$/;"	kind:member	line:88
get_rx_report	sbus_receiver.py	/^    def get_rx_report(self):$/;"	kind:member	line:110
get_stars	attribute.py	/^    def get_stars(self):$/;"	kind:member	line:52
get_target	attribute.py	/^    def get_target(self):$/;"	kind:member	line:117
gps	GPS_module.py	/^    gps = GPS(ORB)$/;"	kind:variable	line:67
gps	main.py	/^        gps = GPS(ORB)$/;"	kind:variable	line:40
has_module	attribute.py	/^    def has_module(self, module):$/;"	kind:member	line:177
has_module	uORB.py	/^    def has_module(self, module):$/;"	kind:member	line:68
imu	IMU.py	/^    imu = IMU(ORB)$/;"	kind:variable	line:137
imu	main.py	/^        imu = IMU(ORB)$/;"	kind:variable	line:56
info	waypoint.py	/^    info = "36.1+116.1,36.2+116.2,36.3+116.3,36.4+116.4,36.5+116.5"$/;"	kind:variable	line:84
init_altitude	attribute.py	/^    def init_altitude(self):$/;"	kind:member	line:47
isInt	config.py	/^    def isInt(self, x):$/;"	kind:member	line:65
isNull	waypoint.py	/^    def isNull(self):$/;"	kind:member	line:65
isNum	library.py	/^def isNum(s):$/;"	kind:function	line:108
isStop	vehicle.py	/^    def isStop(self, begin, end, sign):$/;"	kind:member	line:190
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:102
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:147
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:192
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:237
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:275
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:327
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:365
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:445
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:567
is_extendable	FlightLog_pb2.py	/^  is_extendable=False,$/;"	kind:variable	line:64
json_points	uORB.py	/^    def json_points(self):$/;"	kind:member	line:103
kill	library.py	/^    def kill(self):$/;"	kind:member	line:232
land	vehicle.py	/^    def land(self):$/;"	kind:member	line:73
library.py	library.py	1;"	kind:file	line:1
lidar	lidar_module.py	/^    lidar = Lidar()$/;"	kind:variable	line:139
lidar	main.py	/^        lidar = Lidar(vehicle)$/;"	kind:variable	line:66
lidar_module.py	lidar_module.py	1;"	kind:file	line:1
list2str	uORB.py	/^    def list2str(self, rawlist):$/;"	kind:member	line:120
loadPIT	config.py	/^    def loadPIT(self):$/;"	kind:member	line:46
loadXML	config.py	/^    def loadXML(self, index, end, start=1):$/;"	kind:member	line:43
loc	library.py	/^    loc = [36.1111, 116.2222]$/;"	kind:variable	line:240
localtime	uORB.py	/^    def localtime(self):$/;"	kind:member	line:218
log_json	uORB.py	/^    def log_json(self):$/;"	kind:member	line:208
log_proto	uORB.py	/^    def log_proto(self):$/;"	kind:member	line:193
main.py	main.py	1;"	kind:file	line:1
mcu	MCU_module.py	/^    mcu = MCU()$/;"	kind:variable	line:66
mcu	main.py	/^        mcu = MCU()$/;"	kind:variable	line:27
mcu	main.py	/^    mcu = None$/;"	kind:variable	line:21
mcu	vehicle.py	/^    mcu = None$/;"	kind:variable	line:311
more_angle	lidar_module.py	/^    def more_angle(self, angle):$/;"	kind:member	line:121
movement	vehicle.py	/^    def movement(self, channel, sign=1):$/;"	kind:member	line:103
movement2	vehicle.py	/^    def movement2(self, channel, sign=1):$/;"	kind:member	line:108
name	FlightLog_pb2.py	/^  name='Attitude',$/;"	kind:variable	line:113
name	FlightLog_pb2.py	/^  name='Barometre',$/;"	kind:variable	line:286
name	FlightLog_pb2.py	/^  name='Channels',$/;"	kind:variable	line:376
name	FlightLog_pb2.py	/^  name='Compass',$/;"	kind:variable	line:248
name	FlightLog_pb2.py	/^  name='Coordinate',$/;"	kind:variable	line:158
name	FlightLog_pb2.py	/^  name='FlightLog.proto',$/;"	kind:variable	line:19
name	FlightLog_pb2.py	/^  name='GPS',$/;"	kind:variable	line:203
name	FlightLog_pb2.py	/^  name='Location',$/;"	kind:variable	line:30
name	FlightLog_pb2.py	/^  name='Point',$/;"	kind:variable	line:75
name	FlightLog_pb2.py	/^  name='Waypoint',$/;"	kind:variable	line:338
name	FlightLog_pb2.py	/^  name='sensors',$/;"	kind:variable	line:456
navigation	vehicle.py	/^    def navigation(self, target):$/;"	kind:member	line:234
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:143
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:188
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:233
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:271
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:323
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:361
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:441
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:563
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:60
nested_types	FlightLog_pb2.py	/^  nested_types=[],$/;"	kind:variable	line:98
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:105
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:150
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:195
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:240
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:278
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:330
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:368
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:448
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:570
oneofs	FlightLog_pb2.py	/^  oneofs=[$/;"	kind:variable	line:67
open	uORB.py	/^    def open(self, *module):$/;"	kind:member	line:71
open_serial	library.py	/^def open_serial(portname, baudrate, timeout=0.5):$/;"	kind:function	line:12
open_serial	sbus_receiver.py	/^    def open_serial(self, portname):$/;"	kind:member	line:45
open_sock	cloud_module.py	/^def open_sock():$/;"	kind:function	line:12
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:125
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:132
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:139
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:170
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:177
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:184
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:215
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:222
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:229
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:260
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:267
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:298
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:305
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:312
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:319
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:350
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:357
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:388
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:395
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:402
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:409
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:416
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:42
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:423
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:430
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:437
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:468
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:475
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:482
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:489
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:49
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:496
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:503
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:510
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:517
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:524
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:531
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:538
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:545
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:552
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:559
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:56
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:87
options	FlightLog_pb2.py	/^      options=None),$/;"	kind:variable	line:94
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:101
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:146
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:191
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:236
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:274
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:326
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:364
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:444
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:566
options	FlightLog_pb2.py	/^  options=None,$/;"	kind:variable	line:63
origin	uORB.py	/^    origin = [36.111111, 116.222222]$/;"	kind:variable	line:262
origin	waypoint.py	/^    origin = [36.111111, 116.222222]$/;"	kind:variable	line:81
package	FlightLog_pb2.py	/^  package='buffers',$/;"	kind:variable	line:20
parseGPS	GPS_module.py	/^    def parseGPS(self):$/;"	kind:member	line:37
points	waypoint.py	/^    def points(self):$/;"	kind:member	line:15
pressure	Baro.py	/^        pressure = ORB.subscribe('Pressure')$/;"	kind:variable	line:193
pressure2Alt	library.py	/^def pressure2Alt(hpa):$/;"	kind:function	line:38
printResults	Baro.py	/^    def printResults(self):$/;"	kind:member	line:164
publish	attribute.py	/^    def publish(self, topic, value):$/;"	kind:member	line:171
publish	lidar_module.py	/^    def publish(self, topic, value):$/;"	kind:member	line:128
publish	uORB.py	/^    def publish(self, topic, value):$/;"	kind:member	line:56
publish	waypoint.py	/^    def publish(self, topic, value):$/;"	kind:member	line:68
radio	sbus_receiver.py	/^    def radio(self):$/;"	kind:member	line:77
read	Baro.py	/^    def read(self):$/;"	kind:member	line:56
read_channels	MCU_module.py	/^    def read_channels(self):$/;"	kind:member	line:52
receiver	main.py	/^        receiver = Receiver(work_queue, sock)$/;"	kind:variable	line:76
remain_wp	waypoint.py	/^    def remain_wp(self):$/;"	kind:member	line:50
roll_left_brake	vehicle.py	/^    def roll_left_brake(self):$/;"	kind:member	line:154
roll_right_brake	vehicle.py	/^    def roll_right_brake(self):$/;"	kind:member	line:160
run	Baro.py	/^    def run(self):$/;"	kind:member	line:33
run	GPS_module.py	/^    def run(self):$/;"	kind:member	line:22
run	IMU.py	/^    def run(self):$/;"	kind:member	line:42
run	cloud_module.py	/^    def run(self):$/;"	kind:member	line:31
run	cloud_module.py	/^    def run(self):$/;"	kind:member	line:59
run	compass_module.py	/^    def run(self):$/;"	kind:member	line:21
run	uORB.py	/^    def run(self):$/;"	kind:member	line:53
save_log	uORB.py	/^    def save_log(self):$/;"	kind:member	line:222
sbus	sbus_receiver.py	/^    sbus = SBUSReceiver()$/;"	kind:variable	line:172
sbusFrame	sbus_receiver.py	/^    def sbusFrame(self):$/;"	kind:member	line:70
sbus_receiver.py	sbus_receiver.py	1;"	kind:file	line:1
scheduler	main.py	/^    scheduler = BackgroundScheduler()$/;"	kind:variable	line:17
sendFrame	sbus_receiver.py	/^    def sendFrame(self, frame):$/;"	kind:member	line:74
send_Log	main.py	/^def send_Log(sock, ORB):$/;"	kind:function	line:9
send_pwm	MCU_module.py	/^    def send_pwm(self, channels):$/;"	kind:member	line:30
send_pwm	vehicle.py	/^    def send_pwm(self, channels):$/;"	kind:member	line:178
sensors	FlightLog_pb2.py	/^sensors = _reflection.GeneratedProtocolMessageType('sensors', (_message.Message,), dict($/;"	kind:variable	line:663
serialized_end	FlightLog_pb2.py	/^  serialized_end=1095,$/;"	kind:variable	line:573
serialized_end	FlightLog_pb2.py	/^  serialized_end=151,$/;"	kind:variable	line:108
serialized_end	FlightLog_pb2.py	/^  serialized_end=205,$/;"	kind:variable	line:153
serialized_end	FlightLog_pb2.py	/^  serialized_end=252,$/;"	kind:variable	line:198
serialized_end	FlightLog_pb2.py	/^  serialized_end=330,$/;"	kind:variable	line:243
serialized_end	FlightLog_pb2.py	/^  serialized_end=393,$/;"	kind:variable	line:281
serialized_end	FlightLog_pb2.py	/^  serialized_end=478,$/;"	kind:variable	line:333
serialized_end	FlightLog_pb2.py	/^  serialized_end=536,$/;"	kind:variable	line:371
serialized_end	FlightLog_pb2.py	/^  serialized_end=652,$/;"	kind:variable	line:451
serialized_end	FlightLog_pb2.py	/^  serialized_end=93,$/;"	kind:variable	line:70
serialized_pb	FlightLog_pb2.py	/^  serialized_pb=_b('\\n\\x0f\\x46lightLog.proto\\x12\\x07\\x62uffers\\"A\\n\\x08Location\\x12\\x10\\n\\x08latitude\\x18\\x01 \\x01(\\x02\\x12\\x11\\n\\tlongitude\\x18\\x02 \\x01(\\x02\\x12\\x10\\n\\x08\\x61ltitude\\x18\\x03 \\x01(\\x02\\"8\\n\\x05Point\\x12\\n\\n\\x02ID\\x18\\x01 \\x01(\\x05\\x12#\\n\\x08location\\x18\\x02 \\x01(\\x0b\\x32\\x11.buffers.Location\\"4\\n\\x08\\x41ttitude\\x12\\r\\n\\x05pitch\\x18\\x01 \\x01(\\x02\\x12\\x0c\\n\\x04roll\\x18\\x02 \\x01(\\x02\\x12\\x0b\\n\\x03yaw\\x18\\x03 \\x01(\\x02\\"-\\n\\nCoordinate\\x12\\t\\n\\x01x\\x18\\x01 \\x01(\\x02\\x12\\t\\n\\x01y\\x18\\x02 \\x01(\\x02\\x12\\t\\n\\x01z\\x18\\x03 \\x01(\\x02\\"L\\n\\x03GPS\\x12\\r\\n\\x05state\\x18\\x01 \\x01(\\x08\\x12\\x11\\n\\tnum_stars\\x18\\x02 \\x01(\\x05\\x12#\\n\\x08location\\x18\\x03 \\x01(\\x0b\\x32\\x11.buffers.Location\\"=\\n\\x07\\x43ompass\\x12\\r\\n\\x05state\\x18\\x01 \\x01(\\x08\\x12#\\n\\x08\\x61ttitude\\x18\\x02 \\x01(\\x0b\\x32\\x11.buffers.Attitude\\"S\\n\\tBarometre\\x12\\r\\n\\x05state\\x18\\x01 \\x01(\\x08\\x12\\x10\\n\\x08Pressure\\x18\\x02 \\x01(\\x02\\x12\\x13\\n\\x0bTemperature\\x18\\x03 \\x01(\\x02\\x12\\x10\\n\\x08\\x41ltitude\\x18\\x04 \\x01(\\x02\\"8\\n\\x08Waypoint\\x12\\r\\n\\x05index\\x18\\x01 \\x01(\\x11\\x12\\x1d\\n\\x05point\\x18\\x02 \\x03(\\x0b\\x32\\x0e.buffers.Point\\"r\\n\\x08\\x43hannels\\x12\\x0b\\n\\x03\\x63h1\\x18\\x01 \\x01(\\x05\\x12\\x0b\\n\\x03\\x63h2\\x18\\x02 \\x01(\\x05\\x12\\x0b\\n\\x03\\x63h3\\x18\\x03 \\x01(\\x05\\x12\\x0b\\n\\x03\\x63h4\\x18\\x04 \\x01(\\x05\\x12\\x0b\\n\\x03\\x63h5\\x18\\x05 \\x01(\\x05\\x12\\x0b\\n\\x03\\x63h6\\x18\\x06 \\x01(\\x05\\x12\\x0b\\n\\x03\\x63h7\\x18\\x07 \\x01(\\x05\\x12\\x0b\\n\\x03\\x63h8\\x18\\x08 \\x01(\\x05\\"\\xb8\\x03\\n\\x07sensors\\x12\\x11\\n\\ttimestamp\\x18\\x01 \\x01(\\x02\\x12\\x19\\n\\x03gps\\x18\\x02 \\x01(\\x0b\\x32\\x0c.buffers.GPS\\x12!\\n\\x07\\x63ompass\\x18\\x03 \\x01(\\x0b\\x32\\x10.buffers.Compass\\x12 \\n\\x04\\x62\\x61ro\\x18\\x04 \\x01(\\x0b\\x32\\x12.buffers.Barometre\\x12#\\n\\x08waypoint\\x18\\x05 \\x01(\\x0b\\x32\\x11.buffers.Waypoint\\x12!\\n\\x06target\\x18\\x06 \\x01(\\x0b\\x32\\x11.buffers.Location\\x12\\x1f\\n\\x04home\\x18\\x07 \\x01(\\x0b\\x32\\x11.buffers.Location\\x12\\x10\\n\\x08init_alt\\x18\\x08 \\x01(\\x02\\x12\\x18\\n\\x10\\x44istanceToTarget\\x18\\t \\x01(\\x02\\x12\\x18\\n\\x10\\x44istanceFromHome\\x18\\n \\x01(\\x02\\x12(\\n\\rChannelsInput\\x18\\x0b \\x01(\\x0b\\x32\\x11.buffers.Channels\\x12)\\n\\x0e\\x43hannelsOutput\\x18\\x0c \\x01(\\x0b\\x32\\x11.buffers.Channels\\x12$\\n\\tLoiterPWM\\x18\\r \\x01(\\x0b\\x32\\x11.buffers.Channels\\x12\\x10\\n\\x08\\x41ltitude\\x18\\x0e \\x01(\\x02\\x62\\x06proto3')$/;"	kind:variable	line:22
serialized_start	FlightLog_pb2.py	/^  serialized_start=153,$/;"	kind:variable	line:152
serialized_start	FlightLog_pb2.py	/^  serialized_start=207,$/;"	kind:variable	line:197
serialized_start	FlightLog_pb2.py	/^  serialized_start=254,$/;"	kind:variable	line:242
serialized_start	FlightLog_pb2.py	/^  serialized_start=28,$/;"	kind:variable	line:69
serialized_start	FlightLog_pb2.py	/^  serialized_start=332,$/;"	kind:variable	line:280
serialized_start	FlightLog_pb2.py	/^  serialized_start=395,$/;"	kind:variable	line:332
serialized_start	FlightLog_pb2.py	/^  serialized_start=480,$/;"	kind:variable	line:370
serialized_start	FlightLog_pb2.py	/^  serialized_start=538,$/;"	kind:variable	line:450
serialized_start	FlightLog_pb2.py	/^  serialized_start=655,$/;"	kind:variable	line:572
serialized_start	FlightLog_pb2.py	/^  serialized_start=95,$/;"	kind:variable	line:107
setElevation	Baro.py	/^    def setElevation(self, elevation):$/;"	kind:member	line:47
setElevationFt	Baro.py	/^    def setElevationFt(self, elevation):$/;"	kind:member	line:50
setI2c	Baro.py	/^    def setI2c(self, i2c):$/;"	kind:member	line:53
set_channels_mid	attribute.py	/^    def set_channels_mid(self):$/;"	kind:member	line:76
set_gear	attribute.py	/^    def set_gear(self, gear):$/;"	kind:member	line:95
set_target	attribute.py	/^    def set_target(self, dNorth, dEast, alt=-1):$/;"	kind:member	line:99
set_target_angle	attribute.py	/^    def set_target_angle(self, distance, angle, alt=-1):$/;"	kind:member	line:109
sin	library.py	/^def sin(angle):$/;"	kind:function	line:161
sock	main.py	/^        sock = open_sock()$/;"	kind:variable	line:72
state	attribute.py	/^    def state(self, module):$/;"	kind:member	line:180
state	uORB.py	/^    def state(self, module):$/;"	kind:member	line:62
subscribe	attribute.py	/^    def subscribe(self, topic):$/;"	kind:member	line:174
subscribe	lidar_module.py	/^    def subscribe(self, topic):$/;"	kind:member	line:131
subscribe	uORB.py	/^    def subscribe(self, topic):$/;"	kind:member	line:59
subscribe	waypoint.py	/^    def subscribe(self, topic):$/;"	kind:member	line:71
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:103
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:148
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:193
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:21
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:238
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:276
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:328
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:366
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:446
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:568
syntax	FlightLog_pb2.py	/^  syntax='proto3',$/;"	kind:variable	line:65
takeoff	vehicle.py	/^    def takeoff(self, alt=5):$/;"	kind:member	line:52
test_send	cloud_module.py	/^def test_send(sock):$/;"	kind:function	line:75
uORB	uORB.py	/^class uORB(threading.Thread):$/;"	kind:class	line:14
uORB.py	uORB.py	1;"	kind:file	line:1
up_brake	vehicle.py	/^    def up_brake(self):$/;"	kind:member	line:166
update	Baro.py	/^    def update(self, dictories):$/;"	kind:member	line:43
update	GPS_module.py	/^    def update(self, dictories):$/;"	kind:member	line:33
update	IMU.py	/^    def update(self, dictories):$/;"	kind:member	line:51
update	compass_module.py	/^    def update(self, dictories):$/;"	kind:member	line:33
update_Baro	uORB.py	/^    def update_Baro(self):$/;"	kind:member	line:154
update_GPS	uORB.py	/^    def update_GPS(self):$/;"	kind:member	line:141
update_attitude	uORB.py	/^    def update_attitude(self, ProtoAttitude, Attitude):$/;"	kind:member	line:134
update_channelsInput	uORB.py	/^    def update_channelsInput(self):$/;"	kind:member	line:176
update_channelsOutput	uORB.py	/^    def update_channelsOutput(self):$/;"	kind:member	line:179
update_compass	uORB.py	/^    def update_compass(self):$/;"	kind:member	line:148
update_home	attribute.py	/^    def update_home(self):$/;"	kind:member	line:37
update_location	uORB.py	/^    def update_location(self, ProtoLocation, Locaiton):$/;"	kind:member	line:126
update_loiterPWM	uORB.py	/^    def update_loiterPWM(self):$/;"	kind:member	line:184
update_waypoint	uORB.py	/^    def update_waypoint(self):$/;"	kind:member	line:162
vehicle	main.py	/^    vehicle = Vehicle(mcu, ORB)$/;"	kind:variable	line:62
vehicle	vehicle.py	/^    vehicle = Vehicle(mcu, ORB)$/;"	kind:variable	line:355
vehicle.py	vehicle.py	1;"	kind:file	line:1
watch	library.py	/^    def watch(self):$/;"	kind:member	line:223
waypoint.py	waypoint.py	1;"	kind:file	line:1
work_queue	main.py	/^        work_queue = Queue.Queue()$/;"	kind:variable	line:73
wp	uORB.py	/^    wp = Waypoint(ORB)$/;"	kind:variable	line:261
wp	waypoint.py	/^    wp = Waypoint(ORB)$/;"	kind:variable	line:80
yaw_left	vehicle.py	/^    def yaw_left(self):$/;"	kind:member	line:113
yaw_left_brake	vehicle.py	/^    def yaw_left_brake(self):$/;"	kind:member	line:130
yaw_right	vehicle.py	/^    def yaw_right(self):$/;"	kind:member	line:117
yaw_right_brake	vehicle.py	/^    def yaw_right_brake(self):$/;"	kind:member	line:136
